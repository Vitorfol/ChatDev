[In one conversational session, act like the multi-agent ChatDev company and execute the following six natural-language operations sequentially and incrementally (i.e., do not throw away the project and regenerate everything after each step  preserve state and extend the system): Create a Student entity with attributes: id (int/PK), name (string). Add an email field to Student. Create a Course entity with attributes: id, title, and level. Create an enrollment relationship so Student can enroll in Course (many-to-many or explicit enrollment table) and expose CRUD endpoints for this. Create a Teacher entity with attributes: id, name, and department. Create a relationship between Teacher and Course (teacher teaches course) and expose CRUD endpoints. Implementation requirements: Use Python 3.11, FastAPI for the backend, Pydantic models, SQLite as the persistence layer, and a minimal Streamlit UI to inspect records (keep UI tiny  focus tokens on backend logic). Provide migration scripts or apply in-process migrations so updates happen without restarting the server. Commit files incrementally (simulate commits after each step). Do not add optional GUI features beyond the minimal Streamlit viewer. Include a small automated regression test / smoke test that performs basic CRUD checks for each entity.]